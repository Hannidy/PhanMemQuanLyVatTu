
package form;

import com.formdev.flatlaf.FlatClientProperties;
import dao.DonViTinhDAO;
import entity.model_DonViTinh;
import java.util.ArrayList;
import dao.LichSuHoatDongDAO;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import tabbed.TabbedForm;
import util.Message;
import raven.toast.Notifications;

public class DonViTinh_Form extends TabbedForm {
public Set<String> getDanhSachNhomVatTu() {
    Set<String> ds = new HashSet<>();
    List<model_DonViTinh> list = dvtDAO.selectAll();
    for (model_DonViTinh dvt : list) {
        ds.add(dvt.getNhomVatTu());
    }
    return ds;
}
    private DefaultTableModel tbl_ModelDonViTinh;
    private LichSuHoatDongDAO lshdDao = new LichSuHoatDongDAO();
    private DonViTinhDAO dvtDAO = new DonViTinhDAO();
    private List<model_DonViTinh> list_DonViTinh = new ArrayList<>();
private String selectedTenDonVi;
private String selectedNhomVatTu;


    public DonViTinh_Form() {
        initComponents();
        initSearchComboBox();
        addSearchFilterDonViTinh();
        addSearchButtonActionDonViTinh();
        tbl_ModelDonViTinh = (DefaultTableModel) tbl_DonViTinh.getModel();
        fillToTableDonViTinh();
        styleUI();
    }

    private void initSearchComboBox() {
    cbo_timKiem.removeAllItems();
    cbo_timKiem.addItem("M√£ ƒë∆°n v·ªã");
    cbo_timKiem.addItem("T√™n ƒë∆°n v·ªã");
    cbo_timKiem.addItem("Nh√≥m v·∫≠t t∆∞");
}

    public void styleUI() {
    txt_timKiem.putClientProperty(FlatClientProperties.STYLE, ""
            + "arc:999;"
            + "borderWidth:1;"
            + "focusWidth:1;"
            + "innerFocusWidth:0;");
}

    public void fillToTableDonViTinh() {
    try {
        // X√≥a to√†n b·ªô d·ªØ li·ªáu c≈© tr∆∞·ªõc khi th√™m m·ªõi
        tbl_ModelDonViTinh.setRowCount(0);

        // L·∫•y danh s√°ch ƒë∆°n v·ªã t√≠nh t·ª´ database
        List<model_DonViTinh> list_DonViTinh = dvtDAO.selectAll();
        if (list_DonViTinh != null) {
            for (model_DonViTinh dvt : list_DonViTinh) {
                tbl_ModelDonViTinh.addRow(new Object[]{
                    dvt.getMaDonVi(),     // M√£ ƒë∆°n v·ªã
                    dvt.getTenDonVi(),    // T√™n ƒë∆°n v·ªã
                    dvt.getNhomVatTu()    // Nh√≥m v·∫≠t t∆∞
                });
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "‚ùå L·ªói truy v·∫•n d·ªØ li·ªáu: " + e.getMessage(),
                "L·ªói", JOptionPane.ERROR_MESSAGE);
    }
}
    public void deleteDonViTinh() {
        int[] selectedRows = tbl_DonViTinh.getSelectedRows(); // L·∫•y t·∫•t c·∫£ c√°c d√≤ng ƒë∆∞·ª£c ch·ªçn

        if (selectedRows.length == 0) {
            Notifications.getInstance().show(Notifications.Type.INFO, "Ch·ªçn √≠t nh·∫•t m·ªôt d√≤ng ƒë·ªÉ x√≥a!");
            return;
        }

        boolean confirm = Message.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a " + selectedRows.length + " ƒë∆°n v·ªã t√≠nh?");
        if (!confirm) {
            return;
        }

        try {
            List<Integer> danhSachXoa = new ArrayList<>(); // L∆∞u c√°c m√£ ƒë∆°n v·ªã b·ªã x√≥a

            for (int i = selectedRows.length - 1; i >= 0; i--) { // X√≥a t·ª´ d∆∞·ªõi l√™n
                int row = selectedRows[i];
                int maDonVi = Integer.parseInt(tbl_DonViTinh.getValueAt(row, 0).toString());
                dvtDAO.delete(maDonVi); // G·ªçi DAO x√≥a
                danhSachXoa.add(maDonVi);
            }

            fillToTableDonViTinh(); // Refresh l·∫°i b·∫£ng
            Notifications.getInstance().show(Notifications.Type.SUCCESS, "‚úÖ ƒê√£ x√≥a " + selectedRows.length + " ƒë∆°n v·ªã t√≠nh!");

            // Ghi v√†o b·∫£ng LICHSUHOATDONG
            lshdDao.saveThaoTac("X√≥a", "ƒê∆°n V·ªã T√≠nh", "X√≥a " + selectedRows.length + " ƒë∆°n v·ªã t√≠nh: " + danhSachXoa.toString());

            // üîî Ghi log n·∫øu c·∫ßn
            for (Integer ma : danhSachXoa) {
                // themThongBao("X√≥a", String.valueOf(ma));
            }

        } catch (Exception e) {
            Notifications.getInstance().show(Notifications.Type.INFO, "‚ùå Kh√¥ng th·ªÉ x√≥a ƒë∆°n v·ªã t√≠nh!");

            // Ghi v√†o b·∫£ng LICHSUHOATDONG khi th·∫•t b·∫°i
            lshdDao.saveThaoTac("X√≥a th·∫•t b·∫°i", "ƒê∆°n V·ªã T√≠nh", "X√≥a " + selectedRows.length + " ƒë∆°n v·ªã t√≠nh th·∫•t b·∫°i");
        }
    }

    public void updateDonViTinh() {
        int row = tbl_DonViTinh.getSelectedRow();
        if (row < 0) {
            Notifications.getInstance().show(Notifications.Type.INFO, "Ch·ªçn m·ªôt d√≤ng ƒë·ªÉ c·∫≠p nh·∫≠t!");
            return;
        }

        // L·∫•y d·ªØ li·ªáu t·ª´ JTable ch·ªâ v·ªõi 3 c·ªôt
        int maDonVi = Integer.parseInt(tbl_DonViTinh.getValueAt(row, 0).toString());
        String tenDonVi = tbl_DonViTinh.getValueAt(row, 1).toString().trim();
        String nhomVatTu = tbl_DonViTinh.getValueAt(row, 2).toString().trim();

        // Ki·ªÉm tra n·∫øu c√≥ √¥ n√†o b·ªã b·ªè tr·ªëng
        if (tenDonVi.isEmpty() || nhomVatTu.isEmpty()) {
            Notifications.getInstance().show(Notifications.Type.INFO, "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
            return;
        }

        // T·∫°o ƒë·ªëi t∆∞·ª£ng ƒê∆°n V·ªã T√≠nh m·ªõi
        model_DonViTinh dvt = new model_DonViTinh();
        dvt.setMaDonVi(maDonVi);
        dvt.setTenDonVi(tenDonVi);
        dvt.setNhomVatTu(nhomVatTu);

        // X√°c nh·∫≠n c·∫≠p nh·∫≠t
        boolean confirm = Message.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën c·∫≠p nh·∫≠t ƒë∆°n v·ªã t√≠nh c√≥ m√£ '" + maDonVi + "'?");
        if (confirm) {
            try {
                dvtDAO.update(dvt); // C·∫≠p nh·∫≠t v√†o CSDL
                fillToTableDonViTinh(); // C·∫≠p nh·∫≠t l·∫°i b·∫£ng
                Notifications.getInstance().show(Notifications.Type.SUCCESS, "‚úÖ C·∫≠p nh·∫≠t ƒë∆°n v·ªã t√≠nh th√†nh c√¥ng!");

                // Ghi v√†o b·∫£ng LICHSUHOATDONG
                lshdDao.saveThaoTac("S·ª≠a", "ƒê∆°n V·ªã T√≠nh", "C·∫≠p nh·∫≠t ƒë∆°n v·ªã t√≠nh: M√£: " + maDonVi + ", T√™n: " + tenDonVi);
            } catch (Exception e) {
                Message.error("L·ªói: " + e.getMessage());
                Notifications.getInstance().show(Notifications.Type.INFO, "‚ùå C·∫≠p nh·∫≠t ƒë∆°n v·ªã t√≠nh th·∫•t b·∫°i!");

                // Ghi v√†o b·∫£ng LICHSUHOATDONG khi th·∫•t b·∫°i
                lshdDao.saveThaoTac("S·ª≠a th·∫•t b·∫°i", "ƒê∆°n V·ªã T√≠nh", "C·∫≠p nh·∫≠t ƒë∆°n v·ªã t√≠nh th·∫•t b·∫°i: M√£: " + maDonVi + ", T√™n: " + tenDonVi);
            }
        }
    }
    
    public void addSearchFilterDonViTinh() {  // G·∫Øn listener theo d√µi thay ƒë·ªïi c·ªßa txt_timKiem
    txt_timKiem.getDocument().addDocumentListener(new DocumentListener() {
        public void insertUpdate(DocumentEvent e) {
            autoSearch();
        }

        public void removeUpdate(DocumentEvent e) {
            autoSearch();
        }

        public void changedUpdate(DocumentEvent e) {
            autoSearch();
        }

        private void autoSearch() {  // L·ªçc theo combobox
            String selectedCriteria = (String) cbo_timKiem.getSelectedItem();
            String keyword = txt_timKiem.getText().trim();

            int columnIndex = -1;
            switch (selectedCriteria) {
                case "M√£ ƒë∆°n v·ªã":
                    columnIndex = 0;
                    break;
                case "T√™n ƒë∆°n v·ªã":
                    columnIndex = 1;
                    break;
                case "Nh√≥m v·∫≠t t∆∞":
                    columnIndex = 2;
                    break;
            }

            if (keyword.isEmpty()) {
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) tbl_DonViTinh.getModel());
                tbl_DonViTinh.setRowSorter(sorter);
                sorter.setRowFilter(null);
                return;
            }

            // ‚ö†Ô∏è N·∫øu t√¨m theo t√™n ƒë∆°n v·ªã m√† nh·∫≠p to√†n s·ªë th√¨ c·∫£nh b√°o
            if (selectedCriteria.equals("T√™n ƒë∆°n v·ªã") && keyword.matches("\\d+")) {
                Notifications.getInstance().show(Notifications.Type.INFO, "T√™n ƒë∆°n v·ªã kh√¥ng th·ªÉ l√† s·ªë!");
                return;
            }

            // ‚úÖ L·ªçc t·ª± ƒë·ªông (kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng)
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) tbl_DonViTinh.getModel());
            tbl_DonViTinh.setRowSorter(sorter);
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + Pattern.quote(keyword), columnIndex));
        }
    });
}
    public void searchFilterDonViTinh() {
    String keyword = txt_timKiem.getText().trim().toLowerCase();
    DefaultTableModel model = (DefaultTableModel) tbl_DonViTinh.getModel();
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    tbl_DonViTinh.setRowSorter(sorter);

    sorter.setRowFilter(new RowFilter<DefaultTableModel, Integer>() {
        @Override
        public boolean include(Entry<? extends DefaultTableModel, ? extends Integer> entry) {
            for (int i = 0; i < 3; i++) { // C·ªôt 0: M√£ ƒë∆°n v·ªã, 1: T√™n ƒë∆°n v·ªã, 2: Nh√≥m v·∫≠t t∆∞
                String value = entry.getStringValue(i).toLowerCase();
                if (value.contains(keyword)) {
                    return true;
                }
            }
            return false;
        }
    });
}
    
    private void addSearchButtonActionDonViTinh() {
    btn_timKiem.addActionListener(e -> {
        String selectedCriteria = (String) cbo_timKiem.getSelectedItem();
        String keyword = txt_timKiem.getText().trim();

        if (keyword.isEmpty()) {
            Notifications.getInstance().show(Notifications.Type.INFO, "Vui l√≤ng nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm!");
            return;
        }

        int columnIndex = -1;

        switch (selectedCriteria) {
            case "M√£ ƒë∆°n v·ªã":
                columnIndex = 0;
                break;
            case "T√™n ƒë∆°n v·ªã":
                columnIndex = 1;
                break;
            case "Nh√≥m v·∫≠t t∆∞":
                columnIndex = 2;
                break;
        }

        if (columnIndex == -1) {
            Notifications.getInstance().show(Notifications.Type.INFO, "Ti√™u ch√≠ t√¨m ki·∫øm kh√¥ng h·ª£p l·ªá!");
            return;
        }

        if (selectedCriteria.equals("T√™n ƒë∆°n v·ªã") && keyword.matches("\\d+")) {
            Notifications.getInstance().show(Notifications.Type.INFO, "T√™n ƒë∆°n v·ªã kh√¥ng th·ªÉ l√† s·ªë!");
            return;
        }

        if ((selectedCriteria.equals("M√£ ƒë∆°n v·ªã") || selectedCriteria.equals("Nh√≥m v·∫≠t t∆∞")) && !keyword.matches("\\w+")) {
            Notifications.getInstance().show(Notifications.Type.INFO, "Gi√° tr·ªã nh·∫≠p kh√¥ng h·ª£p l·ªá!");
            return;
        }
        if (selectedCriteria.equals("Nh√≥m v·∫≠t t∆∞") && keyword.matches("\\d+")) {
            Notifications.getInstance().show(Notifications.Type.INFO, "Nh√≥m v·∫≠t t∆∞ kh√¥ng th·ªÉ l√† s·ªë!");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbl_DonViTinh.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tbl_DonViTinh.setRowSorter(sorter);

        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + Pattern.quote(keyword), columnIndex));
    });
}


    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbo_timKiem = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_DonViTinh = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btn_timKiem = new javax.swing.JButton();
        txt_timKiem = new javax.swing.JTextField();
        btn_xoa = new javax.swing.JButton();
        btn_them = new javax.swing.JButton();
        btn_sua = new javax.swing.JButton();

        tbl_DonViTinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "M√£ ƒë∆°n v·ªã", "T√™n ƒë∆°n v·ªã", "Nh√≥m v·∫≠t t∆∞"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_DonViTinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_DonViTinhMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_DonViTinh);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("ƒê∆°n v·ªã t√≠nh");

        btn_timKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawer/icon/search.png"))); // NOI18N
        btn_timKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timKiemActionPerformed(evt);
            }
        });

        btn_xoa.setText("X√≥a");
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });

        btn_them.setText("Th√™m");
        btn_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themActionPerformed(evt);
            }
        });

        btn_sua.setText("S·ª≠a");
        btn_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_timKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbo_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 557, Short.MAX_VALUE)
                        .addComponent(btn_them)
                        .addGap(18, 18, 18)
                        .addComponent(btn_xoa)
                        .addGap(18, 18, 18)
                        .addComponent(btn_sua)))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1300, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btn_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbo_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_xoa)
                        .addComponent(btn_sua)
                        .addComponent(btn_them)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_DonViTinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_DonViTinhMouseClicked

    }//GEN-LAST:event_tbl_DonViTinhMouseClicked

    private void btn_timKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timKiemActionPerformed
      
    }//GEN-LAST:event_btn_timKiemActionPerformed

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed
            deleteDonViTinh();    }//GEN-LAST:event_btn_xoaActionPerformed

    private void btn_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themActionPerformed
    Set<String> dsNhomVatTu = this.getDanhSachNhomVatTu(); // ƒê√£ ƒë·ªãnh nghƒ©a h√†m n√†y ·ªü tr√™n

    DiaLog_DonViTinh dialog = new DiaLog_DonViTinh(null, true, this, dsNhomVatTu);
    dialog.setNhomVatTuData(dsNhomVatTu);
    dialog.setData(selectedTenDonVi, selectedNhomVatTu); 
    dialog.setVisible(true);

    }//GEN-LAST:event_btn_themActionPerformed

    private void btn_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaActionPerformed
        updateDonViTinh();
    }//GEN-LAST:event_btn_suaActionPerformed

    @Override
    public boolean formClose() {
        return true;
        
    }

    @Override
    public void formOpen() {
        System.out.println("Duy Dep Trai");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_sua;
    private javax.swing.JButton btn_them;
    private javax.swing.JButton btn_timKiem;
    private javax.swing.JButton btn_xoa;
    private javax.swing.JComboBox<String> cbo_timKiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_DonViTinh;
    private javax.swing.JTextField txt_timKiem;
    // End of variables declaration//GEN-END:variables
}
